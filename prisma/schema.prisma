generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CustomerMaster {
  id              String    @id @default(cuid())
  customerCode    String    @unique
  customerName    String
  contactPerson   String?
  address         String?
  pincode         String?
  city            String?
  mobile          String?
  phone           String?
  email           String?   @unique
  dateOfBirth     DateTime?
  isInternational Boolean   @default(false)
  ownership       String?

  contractNo           String?
  contractDate         DateTime?
  panNo                String?
  gstNo                String?
  fuelSurchargePercent Float?
  discountPercent      Float?
  openingBalance       Float?
  balanceType          String?
  rates                RateMaster[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RateMaster {
  id                String      @id @default(cuid())
  mode              String
  consignmentType   String
  zoneId            String
  zone              ZoneMaster  @relation(fields: [zoneId], references: [id])
  stateId           String
  state             StateMaster @relation(fields: [stateId], references: [id])
  city              String
  fromWeight        Float
  toWeight          Float
  rate              Float
  hasAdditionalRate Boolean     @default(false)
  additionalWeight  Float?
  additionalRate    Float?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  customerId String
  customer   CustomerMaster @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@index([customerId])
}

model TaxMaster {
  id            String   @id @default(cuid())
  taxCode       String   @unique
  description   String
  ratePercent   Decimal  @db.Decimal(5, 3)
  withinState   Boolean  @default(false)
  forOtherState Boolean  @default(false)
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model CountryMaster {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ZoneMaster {
  id        String        @id @default(cuid())
  code      String        @unique
  name      String
  active    Boolean       @default(true)
  states    StateMaster[]
  rates     RateMaster[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model StateMaster {
  id        String          @id @default(cuid())
  code      String          @unique
  name      String
  zoneId    String
  zone      ZoneMaster      @relation(fields: [zoneId], references: [id])
  active    Boolean         @default(true)
  rates     RateMaster[]
  cities    CityMaster[]
  pincodes  PincodeMaster[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model CityMaster {
  id        String          @id @default(cuid())
  code      String          @unique
  name      String
  stateId   String
  state     StateMaster     @relation(fields: [stateId], references: [id])
  active    Boolean         @default(true)
  pincodes  PincodeMaster[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model PincodeMaster {
  id        String      @id @default(cuid())
  pincode   String      @unique
  stateId   String
  state     StateMaster @relation(fields: [stateId], references: [id])
  cityId    String
  city      CityMaster  @relation(fields: [cityId], references: [id])
  active    Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
